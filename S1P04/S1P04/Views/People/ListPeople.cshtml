@model IEnumerable<S1P04.Models.PersonModel>

@{
    ViewBag.Title = "List of People";
}

<h2>List of People</h2>
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<p>
    Search string: <input type="text" id="search" size="20" name="search">
    <button onclick="ST()">Submit</button>
</p>

<table class="table table-bordered">

    <tr style="background-color: darkgreen; color: white; ">
        <th width="16%">
            @Html.DisplayNameFor(model => model.StuNumber)
        </th>
        <th width="16%">
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th width="16%">
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th class="text-center" width="16%">
            @Html.DisplayNameFor(model => model.Email)
        </th>

        <th class="text-center" width="16%">
            Delete
        </th>
    </tr>

    <tbody id="info">
        @foreach (var item in Model) //For each person
        {
            <tr class="rowcontent">
                <td width="16%">
                    @Html.DisplayFor(modelItem => item.StuNumber)
                </td>
                <td width="16%">
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td width="16%">
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td class="text-center" width="16%">
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td class="text-center" width="20%">
                    <a class="btn btn-success" href="@item.myLink" target="_blank">LINK</a>
                    </td>
                
                <td class="text-center" width="16%">
                    <button type="button" class="btn btn-success btn-sm" onclick="delete_row(this)">Delete</button>
                </td>
            </tr>

        }
    </tbody>
</table>


<p>
    <button onclick="Save()">Save to local storage</button>
    <button onclick="Retrieve()">Retrieve from local storage</button>
    <button onclick="Clear()">Clear local storage</button>
</p>

@section scripts {
    <script type="text/javascript">

        
        var tableBody = document.getElementById("info");
        //Store the string in localStorage using the setItem() method - first stringify the rows
        //------------------------------------------------
        function Save() {

            var tableBody = document.getElementById("info");
            console.log(tableBody);
            const tableData = JSON.stringify(tableBody.innerHTML);
            localStorage.setItem("tableData", tableData);

            //------------------------------------------------without JSON
            //var tableData = "";

            //for (var i = 0, row; row = tableBody.rows[i]; i++) {
            //    for (var j = 0, col; col = row.cells[j]; j++) {
            //        tableData += col.innerHTML + "|";

            //    }
            //    tableData += ",";

            //}
           
        }

        //clearing local storage
        function Clear() {
            localStorage.clear();
        }

         //--------------------------------------------
        function Retrieve() {
            //        Retrieve the string from localStorage using the getItem() method.
           
            var tableData = localStorage.getItem("tableData");
            //console.log(tableData);

            tableBody.innerHTML = " ";

            const tableHTML = JSON.parse(tableData);
            tableBody.innerHTML = tableHTML

             //------------------------------------------------ without JSON
            //var rows = tableData.split(",");
            //console.log(rows);

            //console.log(rows);

            //for (var i = 0; i < rows.length-1; i++) {
            //    var cells = rows[i].split("|");
            //    var row = document.createElement("tr");

            //    for (var j = 0; j < cells.length-1; j++) {
            //        var cell = document.createElement("td");
            //        cell.innerHTML = cells[j];
            //        row.appendChild(cell);
            //    }

            //    tableBody.appendChild(row);
            //}

        }

         //--------------------------------------------

        //search function getting the rows
        var d = document.getElementById("info");
        const x = d.children;
        console.log(x);

        //search function - one can use string functions as well
        function ST() {
            var s = document.getElementById("search").value;
            const pattern = new RegExp(s);
            console.log(pattern);

            for (let i = 0; i < x.length; i++) {

                if (pattern.test(x[i].cells[1].innerText)) {
                    x[i].style.color = "red";
                    setTimeout(function () {
                        x[i].style.color = "black";
                    }, 3000);
                }
                    
            }
        }

         //--------------------------------------------

        //function to delete specified row
        function delete_row(e) {
            e.parentElement.parentElement.remove();
            //console.log("hi");
        }
        window.onload = function () {
            // Get all the rows with class "rowcontent"
            const rows = document.querySelectorAll(".rowcontent");

            rows.forEach(row => {
                // Get the second cell which contains the First Name
                const firstNameCell = row.cells[1]; // 0 = StuNumber, 1 = FirstName

                if (firstNameCell && firstNameCell.innerText.trim().startsWith("S")) {
                    row.style.color = "red";
                }
            });
        };
        
    </script>
}